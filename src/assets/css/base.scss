@mixin ell() {
  overflow: hidden;
  -ms-text-overflow: ellipsis;
  text-overflow: ellipsis;
  white-space: nowrap;
}

$baseColor: #d33a31;

@function pr($px, $base-font-size: 50px) {
  @if (unitless($px)) {
    //@warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels for you";
    @return pr($px + 0px); // That may fail.
  } @else if (unit($px) == rem) {
    @return $px;
  }
  @return ($px / $base-font-size) * 1rem;
}


@font-face {
  font-family: 'iconfont';  /* project id 311056 */
  src: url('//at.alicdn.com/t/font_e3r3kwh70n8hyqfr.eot');
  src: url('//at.alicdn.com/t/font_e3r3kwh70n8hyqfr.eot?#iefix') format('embedded-opentype'),
  url('//at.alicdn.com/t/font_e3r3kwh70n8hyqfr.woff') format('woff'),
  url('//at.alicdn.com/t/font_e3r3kwh70n8hyqfr.ttf') format('truetype'),
  url('//at.alicdn.com/t/font_e3r3kwh70n8hyqfr.svg#iconfont') format('svg');
}

@mixin wh($w) {
  width:$w;
  height:$w;
}

@mixin ava($w) {
  width:$w;
  height:$w;
  img {
    width:100%;
    height:100%;
  }
}

@mixin dfcc() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin overhide($n) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $n;
  -webkit-box-orient: vertical;
}

//1px
@mixin _prefixDpr($selector, $position: 'top', $pseudo: 'before', $dpr: '2') {
  @media only screen and (-webkit-min-device-pixel-ratio:$dpr) {
    @if $dpr == '1.5' {
      #{$selector}:#{$pseudo} {
        -webkit-transform: scaleY(.7);
        transform: scaleY(.7);
        @if $position == 'top' {
          -webkit-transform-origin: left top;
        } @else if $position == 'bottom' {
          -webkit-transform-origin: left bottom;
        }
      }
    } @else if $dpr == '2' {
      #{$selector}:#{$pseudo} {
        -webkit-transform: scaleY(.5);
        transform: scaleY(.5);
        @if $position == 'top' {
          -webkit-transform-origin: left top;
        } @else if $position == 'bottom' {
          -webkit-transform-origin: left bottom;
        }
      }
    } @else if $dpr == '3' {
      #{$selector}:#{$pseudo} {
        -webkit-transform: scaleY(.3);
        transform: scaleY(.3);
        @if $position == 'top' {
          -webkit-transform-origin: left top;
        } @else if $position == 'bottom' {
          -webkit-transform-origin: left bottom;
        }
      }
    }
  }
}

@mixin onepx($selector, $position: 'top',$pseudo: 'before', $color: #666) {
  #{$selector}:#{$pseudo} {
    content: ' ';
    display: block;
    border-top: 1px solid $color;
    position: absolute;
    left: 0;
    right: 0;
  }
  #{$selector} {
    position: relative;
    &:#{$pseudo} {
      @if #{$position} == 'top'{
        top: 0;
      } @else if #{$position} == 'bottom' {
        bottom: 0;
      }
    }
  }
  @include _prefixDpr($selector, $position, $pseudo, '1.5');
  @include _prefixDpr($selector, $position, $pseudo, '2');
  @include _prefixDpr($selector, $position, $pseudo, '3');

}

